{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2024-05-31T13:44:50+01:00",
    "name": "Soulmask",
    "author": "support@gamehostbros.com",
    "description": "Escaping a deadly sacrificial ritual, you find an ancient mystical mask on your journey. This mask holds potent knowledge, changing the world you knew. Face the harsh challenges of nature, survive, rally followers, and build your own tribe. Explore and unveil the truths behind the enigmatic mask.",
    "features": [
        "steam_disk_space"
    ],
    "docker_images": {
        "SteamCMD_Debian": "ghcr.io\/parkervcp\/steamcmd:debian"
    },
    "file_denylist": [
        "PalServer.sh"
    ],
    "startup": ".\/WSServer.sh Level01_Main -server \"$@\" -SteamServerName={{HOSTNAME}} -Maxplayers={{MAX_PLAYERS}} -backup={{BACKUP_TIME}} -saving={{SAVING_TIME}} -log -UTF8Output -MULTIHOME=0.0.0.0 -Port={{SERVER_PORT}} -QueryPort={{QUERY_PORT}} -EchoPort={{ECHO_PORT}} -backupinterval={{BACKUP_INTERVAL}} -adminpsw={{ADMIN_PASSWORD}} $([ -n \"$PASSWORD\" ] && echo \"-PSW=$PASSWORD\") -forcepassthrough",
    "config": {
        "files": "{}",
        "startup": "{\r\n    \"done\": \" Create Dungeon Successed:\"\r\n}",
        "logs": "{}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n# steamcmd Base Installation Script\r\n#\r\n# Server Files: \/mnt\/server\r\n# Image to install with is 'ghcr.io\/parkervcp\/installers:debian'\r\n# Install packages. Default packages below are not required if using our existing install image thus speeding up the install process.\r\n#apt -y update\r\n#apt -y --no-install-recommends install curl lib32gcc-s1 ca-certificates\r\n## just in case someone removed the defaults.\r\nif [[ \"${STEAM_USER}\" == \"\" ]] || [[ \"${STEAM_PASS}\" == \"\" ]]; then\r\necho -e \"steam user is not set.\\n\"\r\necho -e \"Using anonymous user.\\n\"\r\nSTEAM_USER=anonymous\r\nSTEAM_PASS=\"\"\r\nSTEAM_AUTH=\"\"\r\nelse\r\necho -e \"user set to ${STEAM_USER}\"\r\nfi\r\n## download and install steamcmd\r\ncd \/tmp\r\nmkdir -p \/mnt\/server\/steamcmd\r\ncurl -sSL -o steamcmd.tar.gz https:\/\/steamcdn-a.akamaihd.net\/client\/installer\/steamcmd_linux.tar.gz\r\ntar -xzvf steamcmd.tar.gz -C \/mnt\/server\/steamcmd\r\nmkdir -p \/mnt\/server\/steamapps # Fix steamcmd disk write error when this folder is missing\r\ncd \/mnt\/server\/steamcmd\r\n# SteamCMD fails otherwise for some reason, even running as root.\r\n# This is changed at the end of the install process anyways.\r\nchown -R root:root \/mnt\r\nexport HOME=\/mnt\/server\r\n## install game using steamcmd\r\n.\/steamcmd.sh +force_install_dir \/mnt\/server +login ${STEAM_USER} ${STEAM_PASS} ${STEAM_AUTH} $( [[ \"${WINDOWS_INSTALL}\" == \"1\" ]] && printf %s '+@sSteamCmdForcePlatformType windows' ) +app_update ${SRCDS_APPID} $( [[ -z ${SRCDS_BETAID} ]] || printf %s \"-beta ${SRCDS_BETAID}\" ) $( [[ -z ${SRCDS_BETAPASS} ]] || printf %s \"-betapassword ${SRCDS_BETAPASS}\" ) ${INSTALL_FLAGS} validate +quit ## other flags may be needed depending on install. looking at you cs 1.6\r\n## set up 32 bit libraries\r\nmkdir -p \/mnt\/server\/.steam\/sdk32\r\ncp -v linux32\/steamclient.so ..\/.steam\/sdk32\/steamclient.so\r\n## set up 64 bit libraries\r\nmkdir -p \/mnt\/server\/.steam\/sdk64\r\ncp -v linux64\/steamclient.so ..\/.steam\/sdk64\/steamclient.so\r\n## add below your custom commands if needed\r\n\r\n## install end\r\necho \"-----------------------------------------\"\r\necho \"Installation completed...\"\r\necho \"-----------------------------------------\"",
            "container": "ghcr.io\/parkervcp\/installers:debian",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "App ID",
            "description": "Do not edit!",
            "env_variable": "SRCDS_APPID",
            "default_value": "3017300",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|regex:\/^(3017300)$\/",
            "field_type": "text"
        },
        {
            "name": "Auto Update",
            "description": "Auto update the server on start.",
            "env_variable": "AUTO_UPDATE",
            "default_value": "1",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|boolean",
            "field_type": "text"
        },
        {
            "name": "Max Players",
            "description": "Amount of people that can play on the server at once.",
            "env_variable": "MAX_PLAYERS",
            "default_value": "32",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|numeric|between:1,32",
            "field_type": "text"
        },
        {
            "name": "Server Name",
            "description": "Specifies the name of the game instance displayed in the server list.",
            "env_variable": "HOSTNAME",
            "default_value": "Hosted By Game Host Bros",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:64",
            "field_type": "text"
        },
        {
            "name": "Query Port",
            "description": "Specifies the Steam query port, UDP, needs to be open to the public.",
            "env_variable": "QUERY_PORT",
            "default_value": "7778",
            "user_viewable": true,
            "user_editable": false,
            "rules": "required|integer",
            "field_type": "text"
        },
        {
            "name": "Echo Port",
            "description": "Maintenance port, used for local telnet server maintenance, TCP, does not need to be open.",
            "env_variable": "ECHO_PORT",
            "default_value": "18888",
            "user_viewable": true,
            "user_editable": false,
            "rules": "required|integer",
            "field_type": "text"
        },
        {
            "name": "Backup Interval Main",
            "description": "Specifies how often (minutes) to automatically back up the world save.",
            "env_variable": "BACKUP_INTERVAL",
            "default_value": "15",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "Password",
            "description": "Server password, private servers can specify a password, players must enter the password to enter the server.",
            "env_variable": "PASSWORD",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "max:20|nullable",
            "field_type": "text"
        },
        {
            "name": "Admin Password",
            "description": "GM activation password.Open GM Panel (gm key [password])",
            "env_variable": "ADMIN_PASSWORD",
            "default_value": "CHANGEME",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "Backup Interval",
            "description": "Specifies the interval for writing the game database to disk (unit: seconds).",
            "env_variable": "BACKUP_TIME",
            "default_value": "420",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|numeric",
            "field_type": "text"
        },
        {
            "name": "Saving Interval",
            "description": "Specifies the interval for writing game objects to the database (unit: seconds).",
            "env_variable": "SAVING_TIME",
            "default_value": "300",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|numeric",
            "field_type": "text"
        }
    ]
}